{"version":3,"sources":["shared/components/navbar/navbar.tsx","shared/components/dropdown/dropdown.tsx","shared/components/button/button.tsx","shared/components/timeSelect/timeSelect.tsx","routes/home/home.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","className","href","Dropdown","props","useState","dropdownStatus","dropdownSet","onMouseOver","onMouseOut","onClick","label","style","display","Object","keys","options","map","optionKey","onSelect","Button","TimeSelect","house","setHouse","day","setDay","time","setTime","Settings","Home","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+nBAuBeA,MApBf,WACE,OACE,sBAAKC,UAAU,SAAf,UACE,qBAAKA,UAAU,eAAf,SACE,mBAAGC,KAAK,IAAR,uBAEF,sBAAKD,UAAU,iBAAf,UACE,mBAAGC,KAAK,SAAR,mBACA,mBAAGD,UAAU,cAAb,eACA,mBAAGC,KAAK,WAAR,sBACA,mBAAGD,UAAU,cAAb,eACA,mBAAGC,KAAK,WAAR,wBAEF,qBAAKD,UAAU,gBAAf,SACE,mBAAGC,KAAK,UAAR,0B,0BCwCOC,MAhDf,SAAkBC,GAChB,MAAsCC,mBAAS,QAA/C,mBAAOC,EAAP,KAAuBC,EAAvB,KAMA,OACE,sBAAKN,UAAU,WAAf,UACE,wBACEA,UAAU,mBACVO,YAAa,kBAAMD,EAAY,UAC/BE,WAAY,kBAAMF,EAAY,SAC9BG,QAAS,kBARgBH,EAAV,UAAnBD,EAAyC,OAAsB,UAI7D,SAMGF,EAAMO,QAET,qBACEV,UAAU,oBACVW,MAAO,CAAEC,QAASP,GAClBE,YAAa,kBAAMD,EAAY,UAC/BE,WAAY,kBAAMF,EAAY,SAJhC,SAMGO,OAAOC,KAAKX,EAAMY,SAASC,KAAI,SAACC,GAC/B,OACE,mBACER,QAAS,WACPH,EAAY,QACZH,EAAMe,SACJf,EAAMY,QACJE,KALR,SAWId,EAAMY,QACJE,c,MCtBHE,MAdf,SAAgBhB,GACd,OACE,qBAAKH,UAAU,SAAf,SACE,wBACEA,UAAU,iBACVW,MAAK,eAAOR,EAAMQ,OAClBF,QAASN,EAAMM,QAHjB,SAKGN,EAAMO,W,OCmBAU,MAhCf,WACE,MAA0BhB,mBAAS,cAAnC,mBAAOiB,EAAP,KAAcC,EAAd,KACA,EAAsBlB,mBAAS,UAA/B,mBAAOmB,EAAP,KAAYC,EAAZ,KACA,EAAwBpB,mBAAS,eAAjC,mBAAOqB,EAAP,KAAaC,EAAb,KACA,OACE,qBAAK1B,UAAU,aAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,sBAAKA,UAAU,6BAAf,UACE,cAAC,EAAD,CACEU,MAAOW,EACPN,QAAO,eAAOY,EAAQ,aACtBT,SAAUI,IAEZ,cAAC,EAAD,CACEZ,MAAOa,EACPR,QAAO,eAAOY,EAAQ,WACtBT,SAAUM,IAEZ,cAAC,EAAD,CACEd,MAAOe,EACPV,QAAO,eAAOY,EAAQ,YACtBT,SAAUQ,OAGd,qBAAK1B,UAAU,6BAAf,SACE,cAAC,EAAD,CAAQU,MAAM,mBCXTkB,MAdf,WACE,OACE,qBAAK5B,UAAU,OAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,aAAf,UACE,oEACA,mEAEF,cAAC,EAAD,UCAO6B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ac4f0f97.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./navbar.scss\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <div className='navbar'>\r\n      <div className='navbar__left'>\r\n        <a href='/'>KueRoom</a>\r\n      </div>\r\n      <div className='navbar__middle'>\r\n        <a href='/about'>About</a>\r\n        <p className='navbar__dot'>.</p>\r\n        <a href='/privacy'> Privacy</a>\r\n        <p className='navbar__dot'>.</p>\r\n        <a href='/support'>Support</a>\r\n      </div>\r\n      <div className='navbar__right'>\r\n        <a href='/github'>Github</a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import { useState } from \"react\";\r\nimport \"./dropdown.scss\";\r\n\r\ninterface DropdownProps {\r\n  label: string;\r\n  options: any; // CHANGE\r\n  onSelect: any;\r\n}\r\n\r\nfunction Dropdown(props: DropdownProps) {\r\n  const [dropdownStatus, dropdownSet] = useState(\"none\");\r\n\r\n  const toggleDropdown = () =>\r\n    // ONLY ENABLE ON SMALL DEVICES\r\n    dropdownStatus === \"block\" ? dropdownSet(\"none\") : dropdownSet(\"block\");\r\n\r\n  return (\r\n    <div className='dropdown'>\r\n      <button\r\n        className='dropdown__button'\r\n        onMouseOver={() => dropdownSet(\"block\")}\r\n        onMouseOut={() => dropdownSet(\"none\")}\r\n        onClick={() => toggleDropdown()}\r\n      >\r\n        {props.label}\r\n      </button>\r\n      <div\r\n        className='dropdown__content'\r\n        style={{ display: dropdownStatus }}\r\n        onMouseOver={() => dropdownSet(\"block\")}\r\n        onMouseOut={() => dropdownSet(\"none\")}\r\n      >\r\n        {Object.keys(props.options).map((optionKey: string) => {\r\n          return (\r\n            <p\r\n              onClick={() => {\r\n                dropdownSet(\"none\");\r\n                props.onSelect(\r\n                  props.options[\r\n                    optionKey as unknown as keyof typeof props.options\r\n                  ]\r\n                );\r\n              }}\r\n            >\r\n              {\r\n                props.options[\r\n                  optionKey as unknown as keyof typeof props.options\r\n                ]\r\n              }\r\n            </p>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dropdown;\r\n","import React, { CSSProperties, MouseEventHandler } from \"react\";\r\nimport \"./button.scss\";\r\n\r\ninterface ButtonProps {\r\n  label: string;\r\n  onClick?: MouseEventHandler;\r\n  style?: CSSProperties;\r\n  href?: string;\r\n}\r\n\r\nfunction Button(props: ButtonProps) {\r\n  return (\r\n    <div className='button'>\r\n      <button\r\n        className='button__button'\r\n        style={{ ...props.style }}\r\n        onClick={props.onClick}\r\n      >\r\n        {props.label}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React, { useState } from \"react\";\r\nimport \"./timeSelect.scss\";\r\nimport Dropdown from \"../dropdown/dropdown\";\r\nimport Button from \"../button/button\";\r\nimport Settings from \"../../../assets/config/settings.json\";\r\nfunction TimeSelect() {\r\n  const [house, setHouse] = useState(\"Haus A & B\");\r\n  const [day, setDay] = useState(\"Montag\");\r\n  const [time, setTime] = useState(\"8:15 - 9:00\");\r\n  return (\r\n    <div className='timeSelect'>\r\n      <div className='timeSelect__container'>\r\n        <div className='timeSelect__content-select'>\r\n          <Dropdown\r\n            label={house}\r\n            options={{ ...Settings[\"SelectHouse\"] }}\r\n            onSelect={setHouse}\r\n          />\r\n          <Dropdown\r\n            label={day}\r\n            options={{ ...Settings[\"SelectDay\"] }}\r\n            onSelect={setDay}\r\n          />\r\n          <Dropdown\r\n            label={time}\r\n            options={{ ...Settings[\"SelectTime\"] }}\r\n            onSelect={setTime}\r\n          />\r\n        </div>\r\n        <div className='timeSelect__content-button'>\r\n          <Button label='search' />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimeSelect;\r\n","import React from \"react\";\r\nimport \"./home.scss\";\r\nimport Navbar from \"../../shared/components/navbar/navbar\";\r\nimport TimeSelect from \"../../shared/components/timeSelect/timeSelect\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className='home'>\r\n      <div className='home__content'>\r\n        <Navbar />\r\n        <div className='home__hero'>\r\n          <h2>Small solutions for small problems</h2>\r\n          <h1>Kueroom, a place to find rooms</h1>\r\n        </div>\r\n        <TimeSelect />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport Home from \"./routes/home/home\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}